/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EbookMarketing as PrismaEbookMarketing } from "@prisma/client";

export class EbookMarketingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EbookMarketingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.ebookMarketing.count(args);
  }

  async ebookMarketings<T extends Prisma.EbookMarketingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EbookMarketingFindManyArgs>
  ): Promise<PrismaEbookMarketing[]> {
    return this.prisma.ebookMarketing.findMany<Prisma.EbookMarketingFindManyArgs>(
      args
    );
  }
  async ebookMarketing<T extends Prisma.EbookMarketingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EbookMarketingFindUniqueArgs>
  ): Promise<PrismaEbookMarketing | null> {
    return this.prisma.ebookMarketing.findUnique(args);
  }
  async createEbookMarketing<T extends Prisma.EbookMarketingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EbookMarketingCreateArgs>
  ): Promise<PrismaEbookMarketing> {
    return this.prisma.ebookMarketing.create<T>(args);
  }
  async updateEbookMarketing<T extends Prisma.EbookMarketingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EbookMarketingUpdateArgs>
  ): Promise<PrismaEbookMarketing> {
    return this.prisma.ebookMarketing.update<T>(args);
  }
  async deleteEbookMarketing<T extends Prisma.EbookMarketingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EbookMarketingDeleteArgs>
  ): Promise<PrismaEbookMarketing> {
    return this.prisma.ebookMarketing.delete(args);
  }
}
